/*

* Code generated by Symars. Thank you for using Symars!
  Symars is licensed under MIT licnese.
  Repository: https://github.com/Da1sypetals/Symars

* Computation code is not intended for manual editing.

* If you find an error,
  or if you believe Symars generates incorrect result,
  please raise an issue under our repo with minimal reproducible example.

*/

#![allow(unused)]

#[inline]
pub fn grad_0(s: f64) -> f64 {
    let __intermediate_result_5 = (s).powi(2);
    let __intermediate_result_7 = (s).cosh();
    let __intermediate_result_10 = (s).sinh();

    ((1.0000000000000000000_f64)
        + (-(((s).tanh()).powi(2)))
        + ((1.24500000000000_f64)
            * (__intermediate_result_5)
            * ((__intermediate_result_7).powi(2)))
        + ((1.24500000000000_f64)
            * (__intermediate_result_5)
            * ((__intermediate_result_10).powi(2)))
        + ((2.49000000000000_f64) * (s) * (__intermediate_result_7) * (__intermediate_result_10)))
}

#[inline]
pub fn hess_0(s: f64) -> f64 {
    let __intermediate_result_5 = (s).tanh();
    let __intermediate_result_7 = (s).cosh();
    let __intermediate_result_8 = (s).sinh();

    ((-(((2.0000000000000000000_f64)
        + ((-2.0000000000000000000_f64) * ((__intermediate_result_5).powi(2))))
        * (__intermediate_result_5)))
        + ((2.49000000000000_f64) * (__intermediate_result_7) * (__intermediate_result_8))
        + ((4.98000000000000_f64) * (s) * ((__intermediate_result_7).powi(2)))
        + ((4.98000000000000_f64) * (s) * ((__intermediate_result_8).powi(2)))
        + ((4.98000000000000_f64)
            * ((s).powi(2))
            * (__intermediate_result_7)
            * (__intermediate_result_8)))
}

// code generated by symars (sympy)
pub fn grad_1(s: f64) -> f64 {
    (((0.50000000000000000000_f64) * ((s).powf(-0.50000000000000000000_f64)))
        + (((s).powf(1.30000000000000_f64)) * ((s).sin()))
        + (((s).asinh()) * ((s).tan()))
        + ((-1.30000000000000_f64) * ((s).powf(0.300000000000000_f64)) * ((s).cos()))
        + ((s)
            * (((1.0000000000000000000_f64) + ((s).powi(2))).powf(-0.50000000000000000000_f64))
            * ((s).tan()))
        + ((s) * ((1.0000000000000000000_f64) + (((s).tan()).powi(2))) * ((s).asinh())))
}

pub fn hess_1(s: f64) -> f64 {
    let __intermediate_result_8 = ((1.0000000000000000000_f64) + ((s).powi(2)));
    let __intermediate_result_10 = (s).tan();
    let __intermediate_result_13 = ((s).tan()).powi(2);

    (((-0.25000000000000000000_f64) * ((s).powf(-1.5000000000000000000_f64)))
        + (((s).powf(1.30000000000000_f64)) * ((s).cos()))
        + ((2.0000000000000000000_f64)
            * ((__intermediate_result_8).powf(-0.50000000000000000000_f64))
            * (__intermediate_result_10))
        + ((2.0000000000000000000_f64)
            * ((1.0000000000000000000_f64) + (__intermediate_result_13))
            * ((s).asinh()))
        + ((2.60000000000000_f64) * ((s).powf(0.300000000000000_f64)) * ((s).sin()))
        + ((-0.390000000000000_f64) * ((s).powf(-0.700000000000000_f64)) * ((s).cos()))
        + (-(((s).powi(2))
            * ((__intermediate_result_8).powf(-1.5000000000000000000_f64))
            * (__intermediate_result_10)))
        + ((2.0000000000000000000_f64)
            * (s)
            * ((__intermediate_result_8).powf(-0.50000000000000000000_f64))
            * ((1.0000000000000000000_f64) + (__intermediate_result_13)))
        + ((s)
            * ((2.0000000000000000000_f64)
                + ((2.0000000000000000000_f64) * (__intermediate_result_13)))
            * ((s).asinh())
            * (__intermediate_result_10)))
}

pub fn grad_2(s: f64) -> f64 {
    let __intermediate_result_12 = (s).powi(2);
    let __intermediate_result_15 = (s).atanh();
    let __intermediate_result_16 = (s).tan();
    let __intermediate_result_21 = (s).asinh();

    ((-0.693962526023595_f64)
        + ((0.50000000000000000000_f64) * ((s).powf(-0.50000000000000000000_f64)))
        + ((-5.23500000000000_f64) * ((s).powi(-2)))
        + (((s).powf(1.30000000000000_f64)) * ((s).sin()))
        + ((-1.30000000000000_f64) * ((s).powf(0.300000000000000_f64)) * ((s).cos()))
        + ((__intermediate_result_12)
            * (((1.0000000000000000000_f64) + (__intermediate_result_12))
                .powf(-0.50000000000000000000_f64))
            * (__intermediate_result_15)
            * (__intermediate_result_16))
        + ((__intermediate_result_12)
            * (((1.0000000000000000000_f64) + (-(__intermediate_result_12))).recip())
            * (__intermediate_result_21)
            * (__intermediate_result_16))
        + ((__intermediate_result_12)
            * ((1.0000000000000000000_f64) + ((__intermediate_result_16).powi(2)))
            * (__intermediate_result_21)
            * (__intermediate_result_15))
        + ((2.0000000000000000000_f64)
            * (s)
            * (__intermediate_result_21)
            * (__intermediate_result_15)
            * (__intermediate_result_16)))
}

pub fn hess_2(s: f64) -> f64 {
    let __intermediate_result_7 = (s).cos();
    let __intermediate_result_14 = (s).asinh();
    let __intermediate_result_15 = (s).atanh();
    let __intermediate_result_16 = (s).tan();
    let __intermediate_result_18 = (s).powi(3);
    let __intermediate_result_21 = (s).powi(2);
    let __intermediate_result_23 =
        ((1.0000000000000000000_f64) + ((s).powi(2))).powf(-0.50000000000000000000_f64);
    let __intermediate_result_24 = ((1.0000000000000000000_f64) + (-((s).powi(2)))).recip();
    let __intermediate_result_28 = ((1.0000000000000000000_f64) + (((s).tan()).powi(2)));

    (((-0.25000000000000000000_f64) * ((s).powf(-1.5000000000000000000_f64)))
        + ((10.4700000000000_f64) * ((s).powi(-3)))
        + (((s).powf(1.30000000000000_f64)) * (__intermediate_result_7))
        + ((2.60000000000000_f64) * ((s).powf(0.300000000000000_f64)) * ((s).sin()))
        + ((-0.390000000000000_f64)
            * ((s).powf(-0.700000000000000_f64))
            * (__intermediate_result_7))
        + ((2.0000000000000000000_f64)
            * (__intermediate_result_14)
            * (__intermediate_result_15)
            * (__intermediate_result_16))
        + (-((__intermediate_result_18)
            * (((1.0000000000000000000_f64) + (__intermediate_result_21))
                .powf(-1.5000000000000000000_f64))
            * (__intermediate_result_15)
            * (__intermediate_result_16)))
        + ((2.0000000000000000000_f64)
            * (__intermediate_result_21)
            * (__intermediate_result_23)
            * (__intermediate_result_24)
            * (__intermediate_result_16))
        + ((2.0000000000000000000_f64)
            * (__intermediate_result_21)
            * (__intermediate_result_23)
            * (__intermediate_result_28)
            * (__intermediate_result_15))
        + ((2.0000000000000000000_f64)
            * (__intermediate_result_21)
            * (__intermediate_result_24)
            * (__intermediate_result_28)
            * (__intermediate_result_14))
        + ((2.0000000000000000000_f64)
            * (__intermediate_result_18)
            * (((1.0000000000000000000_f64) + (-(__intermediate_result_21))).powi(-2))
            * (__intermediate_result_14)
            * (__intermediate_result_16))
        + ((4.0000000000000000000_f64)
            * (s)
            * (__intermediate_result_23)
            * (__intermediate_result_15)
            * (__intermediate_result_16))
        + ((4.0000000000000000000_f64)
            * (s)
            * (__intermediate_result_24)
            * (__intermediate_result_14)
            * (__intermediate_result_16))
        + ((4.0000000000000000000_f64)
            * (s)
            * (__intermediate_result_28)
            * (__intermediate_result_14)
            * (__intermediate_result_15))
        + ((__intermediate_result_21)
            * ((2.0000000000000000000_f64)
                + ((2.0000000000000000000_f64) * ((__intermediate_result_16).powi(2))))
            * (__intermediate_result_14)
            * (__intermediate_result_15)
            * (__intermediate_result_16)))
}

pub fn grad_3(s: f64) -> f64 {
    let __intermediate_result_9 = (s).powf(1.30000000000000_f64);
    let __intermediate_result_12 = (s).powi(2);
    let __intermediate_result_14 = (s).powi(3);
    let __intermediate_result_17 = (s).cos();
    let __intermediate_result_19 = ((s).asinh()).powi(2);
    let __intermediate_result_23 = (s).tan();

    (((-0.693962526023595_f64)
        + ((0.50000000000000000000_f64) * ((s).powf(-0.50000000000000000000_f64)))
        + ((-27.7760000000000_f64) * ((s).powf(-3.24000000000000_f64)))
        + ((-5.23500000000000_f64) * ((s).powi(-2)))
        + ((__intermediate_result_9) * ((s).sin()))
        + ((-3.0000000000000000000_f64)
            * (__intermediate_result_12)
            * ((__intermediate_result_14).cosh()))
        + ((-1.30000000000000_f64)
            * ((s).powf(0.300000000000000_f64))
            * (__intermediate_result_17))
        + ((__intermediate_result_12)
            * (__intermediate_result_19)
            * ((1.0000000000000000000_f64) + ((__intermediate_result_23).powi(2))))
        + ((2.0000000000000000000_f64)
            * (s)
            * (__intermediate_result_19)
            * (__intermediate_result_23))
        + ((2.0000000000000000000_f64)
            * (__intermediate_result_12)
            * (((1.0000000000000000000_f64) + (__intermediate_result_12))
                .powf(-0.50000000000000000000_f64))
            * ((s).asinh())
            * (__intermediate_result_23)))
        * (if (((s).sqrt())
            + (-((__intermediate_result_14).sinh()))
            + ((5.23500000000000_f64) * ((s).recip()))
            + ((12.4000000000000_f64) * ((s).powf(-2.24000000000000_f64)))
            + ((-0.693962526023595_f64) * (s))
            + (-((__intermediate_result_9) * (__intermediate_result_17)))
            + ((__intermediate_result_12)
                * (__intermediate_result_19)
                * (__intermediate_result_23)))
            .abs()
            == 0.0_f64
        {
            (((s).sqrt())
                + (-((__intermediate_result_14).sinh()))
                + ((5.23500000000000_f64) * ((s).recip()))
                + ((12.4000000000000_f64) * ((s).powf(-2.24000000000000_f64)))
                + ((-0.693962526023595_f64) * (s))
                + (-((__intermediate_result_9) * (__intermediate_result_17)))
                + ((__intermediate_result_12)
                    * (__intermediate_result_19)
                    * (__intermediate_result_23)))
        } else {
            (((s).sqrt())
                + (-((__intermediate_result_14).sinh()))
                + ((5.23500000000000_f64) * ((s).recip()))
                + ((12.4000000000000_f64) * ((s).powf(-2.24000000000000_f64)))
                + ((-0.693962526023595_f64) * (s))
                + (-((__intermediate_result_9) * (__intermediate_result_17)))
                + ((__intermediate_result_12)
                    * (__intermediate_result_19)
                    * (__intermediate_result_23)))
                .signum()
        }))
}
